
testData = "TAGACGGAGAATCTCTATTCTGGCGGATGACCCATTTGTACGTCGCATTGTATACGTCTCATATCTATTGTGGAGCATTCGGGGGTGTTTCTAACGGCTACGCCACTAACACATCTCTCACAGCTACGTAACGCCGCGAGCTACATGTCATCTGTTCGCGCGATTGCCCCATGGCAGCACTAGACCTGACAATTAAACTGACAGGTTTGGCGTACGATCCCAGGCCAGGCGAGTGTGCATTGCGCGGGCTGGGTATTGAAAGACAGAGAAGATGCAACGATGGAAAGCGATTCGAGGCTACATTCCAGTACGTCTCATGCCTTCATGGGGCACGTCGGATCGTTCTCGTCGCTAATGCTACACGGCTAGCTCCGTGCCCCTAGTATGCATTTCTCCTTGCGCATCCTACGCCGACTTTGAGAGTAAGGTACGAACAAAACTGTCCACCGGACATAACTCGGTATGTAGCCAGTGTAGGAATACCAGGTGACGCTATATCAGCTCTAGGAACGAAGCAGTATGGGCGGGGCTATGGAGTCCTTTCGCAAATAAGCTCAAAGGTGCGCTCGACTGATCAAAATGTACGTCTCTTGCTCGAGGAGTATGTACTGCCCGGCGGTTGCGCCTGCCTTTTGACACGTTCCACTCACCCGGCCACCGCCTACCCAATACTCGGGTTACTCGATCGAGAGAACTTTTCTTGGCTAATACCAGTTTATAAGGGTACGGTTGTACTTGCATAGATAACATAGCGTGATTAGGGCGCCGACAAGCTCTCTACGTTACGTTCACGCTTGATTATTATGTTGTGTTATAGCAT"

nucleotides = ['A', 'C', 'T', 'G']
complementary_nucleotides = {'A': 'T', 'T': 'A', 'C': 'G', 'G': 'C'}

def validateDNA(dna):
    dna_seq = dna.upper()
    for i in dna_seq:
        if i not in nucleotides:
            return False
    return dna_seq

def complementary(dna):
    compSeq = ''
    if validateDNA != False:
        for i in dna:
            compSeq += complementary_nucleotides[i]
    return compSeq

def reverseComplementary(dna):
    reverseSeq = complementary(dna)
    
    return reverseSeq[::-1]

print(reverseComplementary(testData))